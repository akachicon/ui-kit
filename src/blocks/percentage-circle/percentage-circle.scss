@import '../../color';

@function calc-circle-transform($containerWidth, $gapWidth) {
  $scale: ($containerWidth - $gapWidth) / $containerWidth;
  $offsetPct: (1 - $scale) / 2 * 100%;

  @return (offsetPct: $offsetPct, scale: $scale);
}

@mixin circle-size-modifier($circleContainerWidth, $circleWidth) {
  .percentage-circle__circle {
    $circleTransform: calc-circle-transform(
                    $circleContainerWidth,
                    $circleWidth
    );

    $offset: map-get($circleTransform, offsetPct);
    $scale: map-get($circleTransform, scale);

    // We have to "rescale" $circleWidth as it is scaled by transform.

    transform: translate($offset, $offset) scale($scale);
    stroke-width: $circleWidth / $scale;
  }
}

.percentage-circle {
  position: relative;

  &__text {
    font-family: 'Lato Light', sans-serif;
    color: #9d9d9d;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }

  &__circle-container {
    width: 100%;
    height: 100%;
    transform: rotate(-90deg);
  }

  &__circle {
    fill: transparent;
  }

  &_size {
    &_s {
      $blockSide: 3.88rem;

      width: $blockSide;
      height: $blockSide;

      .percentage-circle__text {
        font-size: 1.63rem;
      }

      @include circle-size-modifier(
              $circleContainerWidth: $blockSide,
              $circleWidth: .2rem
      );
    }

    &_m {
      $blockSide: 5.94rem;

      width: $blockSide;
      height: $blockSide;

      .percentage-circle__text {
        font-size: 2.5rem;
      }

      @include circle-size-modifier(
              $circleContainerWidth: $blockSide,
              $circleWidth: .3rem
      );
    }
  }

  &_color {
    &_terracotta {
      & .percentage-circle__circle {
        stroke: color(terracotta);
      }
    }

    &_turquoise {
      & .percentage-circle__circle {
        stroke: color(turquoise);
      }
    }
  }
}
